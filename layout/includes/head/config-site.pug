-
    const titleVal = pageTitle.replace(/'/ig,"\\'")

    let isHighlightShrink
    if (theme.highlight_shrink === 'none') isHighlightShrink = 'undefined'
    else if (page.highlight_shrink === true || page.highlight_shrink === false) isHighlightShrink = page.highlight_shrink
    else isHighlightShrink = theme.highlight_shrink

    let Snackbar = 'undefined';
    if (theme.snackbar && theme.snackbar.enable) {
        Snackbar = JSON.stringify({
            day_to_night: _p("Snackbar.day_to_night"),
            night_to_day: _p("Snackbar.night_to_day"),
            bgLight: theme.snackbar.bg_light,
            bgDark: theme.snackbar.bg_dark,
            position: theme.snackbar.position,
        })
    }

    var showToc = false
    if (theme.sidebar.enable && page.sidebar !== false) {
        const pageToc = page.toc === false ? page.toc : true
        showToc = pageToc && toc(page.content) !== ''
    }

    let highlight = 'undefined';
    if ((config.highlight && config.highlight.enable) || (config.prismjs && config.prismjs.enable)) {
        highlight = JSON.stringify({
            plugin: config.highlight.enable ? 'highlighjs' : 'prismjs',
            highlightCopy: theme.highlight_copy,
            highlightLang: theme.highlight_lang,
            highlightHeightLimit: theme.highlight_height_limit
        })
    }

    let rgbaster = 'undefined';
    if (theme.rgbaster.enable && is_post()){
        rgbaster = JSON.stringify({
            exclude: theme.rgbaster.exclude
        })
    }


script#config-diff.
    var GLOBAL_CONFIG = {
        root: '!{config.root}',
        isPost: !{is_post()},
        isHome: !{is_home()},
        isToc: !{showToc},
        rgbaster: !{rgbaster},
        title: '!{titleVal}',
        localSearch: '!{config.search.path}',
        runTime: '!{date_xml(theme.runtime.start_time)}',
        islazyload: !{theme.lazyload.enable},
        highlight: !{highlight},
        isHighlightShrink: !{isHighlightShrink},
        Snackbar: !{Snackbar},
        lightbox: '!{ theme.lightbox ? "lightbox" : 'null' }',
        copy: {
            success: '!{_p("copy.success")}',
            error: '!{_p("copy.error")}',
            noSupport: '!{_p("copy.noSupport")}'
        },
        source: {
            justifiedGallery: {
                js: '!{url_for(theme.CDN.flickr_justified_gallery_js)}',
                css: '!{url_for(theme.CDN.flickr_justified_gallery_css)}'
            }
        }
    }