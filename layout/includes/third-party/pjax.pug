- var pjaxExclude = 'a:not([target="_blank"])'
if theme.pjax.exclude
  each val in theme.pjax.exclude
    - pjaxExclude = pjaxExclude + `:not([href="${val}"])`

- let pjaxSelectors = ['title','#body-wrap','#right-side','.js-pjax']

script(src=url_for(theme.CDN.pjax))
script.
  let pjaxSelectors = !{JSON.stringify(pjaxSelectors)}

  var pjax = new Pjax({
    elements: '!{pjaxExclude}',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: !{!!theme.google_analytics},
    scrollRestoration: false
  })

  document.addEventListener('pjax:send', function () {
    // removeEventListener scroll
    window.tocScrollFn && window.removeEventListener('scroll', window.tocScrollFn)
    window.scrollCollect && window.removeEventListener('scroll', scrollCollect)

    typeof preloader === 'object' && preloader.initLoading()

    if (window.aplayers) {
      for (let i = 0; i < window.aplayers.length; i++) {
        if (!window.aplayers[i].options.fixed) {
          window.aplayers[i].destroy()
        }
      }
    }

    typeof typed === 'object' && typed.destroy()
  })

  document.addEventListener('pjax:complete', function () {
    window.refreshFn()

    document.querySelectorAll('script[data-pjax]').forEach(item => {
      const newScript = document.createElement('script')
      const content = item.text || item.textContent || item.innerHTML || ""
      Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
      newScript.appendChild(document.createTextNode(content))
      item.parentNode.replaceChild(newScript, item)
    })

    GLOBAL_CONFIG.islazyload && window.lazyLoadInstance.update()

    typeof panguFn === 'function' && panguFn()

    // google analytics
    typeof gtag === 'function' && gtag('config', '!{theme.google_analytics}', {'page_path': window.location.pathname});

    // baidu analytics
    typeof _hmt === 'object' && _hmt.push(['_trackPageview',window.location.pathname]);

    typeof loadMeting === 'function' && document.getElementsByClassName('aplayer').length && loadMeting()
    // prismjs
    typeof Prism === 'object' && Prism.highlightAll()

    typeof preloader === 'object' && preloader.endLoading()
  })

  document.addEventListener('pjax:error', (e) => {
    if (e.request.status === 404) {
      pjax.loadUrl('/404.html')
    }
  })
